name: "Get IP ranges"

on:
  workflow_call:
    outputs:
      ips_formatted:
        description: "IPs Ranges (formatted)"
        value: ${{ jobs.get_ip_ranges.outputs.ips_formatted }}

jobs:
  get_ip_ranges:
    name: "Build"
    runs-on: ubuntu-latest
    outputs:
      ips_formatted: ${{ steps.get-ips.outputs.ips_formatted }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          repository: 'ministryofjustice/moj-ip-addresses'
          ref: 'main'
          # This is a fine-grained PAT, it's scoped to the moj-ip private repository
          # with the single permission: Content: Read-only.
          # The token is pending approval: https://github.com/settings/personal-access-tokens/3669004
          token: ${{ secrets.MOJ_IP_ADDRESSES_RO_PAT }}
      - name: "Get & format IPs"
        id: get-ips
        uses: mikefarah/yq@master
        with:
          cmd: |
            # Transform IPs into nginx geo format. 1 IP range per line, each range is followed by its value.
            # @see https://nginx.org/en/docs/http/ngx_http_geo_module.html
            ALLOW_VALUE=1
            DEPRI_VALUE=2
            CLOUD_VALUE=3
            LOCAL_VALUE=4

            ALLOW_FORMATTED=$(yq 'explode(.) | .allow_access_to_moj_intranet       | flatten | map(. + " '$ALLOW_VALUE';") | join("\n")' moj-cidr-addresses.yml)
            DEPRI_FORMATTED=$(yq 'explode(.) | .deprecating_access_to_moj_intranet | flatten | map(. + " '$DEPRI_VALUE';") | join("\n")' moj-cidr-addresses.yml)
            
            echo "::add-mask::$ALLOW_FORMATTED"
            echo "::add-mask::$DEPRI_FORMATTED"

            # Below is a line for LB_RANGE - trust these internal IPs to correctly report HTTP_X_FORWARDED_FOR.
            # `127.0.0.1 $LOCAL_VALUE;` - allows requests from fpm to nginx containers.

            {
                echo 'IPS_FORMATTED<<EOF'
                echo "proxy ${{ vars.LB_RANGE }};"
                echo "127.0.0.1 $LOCAL_VALUE;"
                echo "$ALLOW_FORMATTED"
                echo "$DEPRI_FORMATTED"
                echo "${{ vars.CLOUD_RANGE }} $CLOUD_VALUE;"
                echo EOF
            }  >> $GITHUB_ENV
